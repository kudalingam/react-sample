{"version":3,"sources":["components/Home.js","assets/img/answer.png","assets/img/fiftyFifty.PNG","assets/img/hints.PNG","assets/img/options.PNG","components/quiz/QuizInstructions.js","utils/is-empty.js","assets/audio/correct-answer.mp3","assets/audio/wrong-answer.mp3","assets/audio/button-sound.mp3","components/quiz/Play.js","components/quiz/QuizSummary.js","App.js","index.js"],"names":["Home","id","style","textAlign","className","to","QuizInstructions","src","options","alt","answer","fiftyFifty","hints","color","isEmpty","value","undefined","Object","keys","length","trim","Play","props","displayQuestions","questions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","setState","numberOfQuestions","previousRandomNumbers","showOptions","handleDisableButton","handleOptionClick","e","target","innerHTML","toLowerCase","correctTimeout","setTimeout","correctSound","current","play","correctAnswer","wrongTimeout","wrongSound","wrongAnswer","handleNextButtonClick","playButtonSound","prevState","handlePreviousButtonClick","handleQuitButtonClick","window","confirm","history","push","handleButtonClick","buttonSound","M","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","endGame","navigator","vibrate","wrongAnswers","Array","from","document","querySelectorAll","forEach","option","visibility","usedFiftyFifty","handleHints","indexOfAnswer","index","randomNumber","Math","round","random","includes","concat","handleFiftyFifty","randomNumbers","count","newRandomNumber","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","previousButtonDisabled","nextButtonDisabled","alert","playerStats","fiftyFiftyUsed","hintsUsed","React","createRef","this","ref","correctNotification","wrongNotification","onClick","float","classnames","warning","invalid","question","optionA","optionB","optionC","optionD","disable","Component","QuizSummary","location","stats","remark","userScore","marginTop","marginLeft","toFixed","width","height","chartType","loader","data","legend","pieStartAngle","is3D","slices","offset","App","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.039e2177.chunk.js","sourcesContent":["import React from \"react\";\n//import { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/components/home.css\";\n\nconst Home = () => (\n  <>\n    <div id=\"home\">\n      <section>\n        <div style={{ textAlign: \"center\" }}>\n          <span className=\"mdi mdi-cube-outline cube\"></span>\n        </div>\n        <h1>Aptitude Test</h1>\n        <div className=\"play-button-container\">\n          <ul>\n            <li>\n              <Link className=\"play-button\" to=\"/play/instructions\">\n                Take Test\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </section>\n    </div>\n  </>\n);\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/answer.5f038f52.png\";","export default __webpack_public_path__ + \"static/media/fiftyFifty.61da6325.PNG\";","export default __webpack_public_path__ + \"static/media/hints.16209f84.PNG\";","export default __webpack_public_path__ + \"static/media/options.6cc7e18f.PNG\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../styles/components/quiz-instruction.css\";\n\nimport answer from \"../../assets/img/answer.png\";\nimport fiftyFifty from \"../../assets/img/fiftyFifty.PNG\";\nimport hints from \"../../assets/img/hints.PNG\";\nimport options from \"../../assets/img/options.PNG\";\n\nconst QuizInstructions = () => (\n  <>\n    <div className=\"instructions container\">\n      <h1>How to Complete the Test</h1>\n      <p>Ensure you read this guide from start to finish.</p>\n      <ul className=\"browser-default\" id=\"main-list\">\n        <li>\n          The game has a duration of 15 minutes and ends as soon as your time\n          elapses.\n        </li>\n        <li>Each game consists of 15 questions.</li>\n        <li>\n          Every question contains 4 options.\n          <img src={options} alt=\"Quiz App options example\" />\n        </li>\n        <li>\n          Select the option which best answers the question by clicking (or\n          selecting) it.\n          <img src={answer} alt=\"Quiz App answer example\" />\n        </li>\n        <li>\n          Each game has 2 lifelines namely:\n          <ul id=\"sublist\">\n            <li>2 50-50 chances</li>\n            <li>5 Hints</li>\n          </ul>\n        </li>\n        <li>\n          Selecting a 50-50 lifeline by clicking the icon\n          <span className=\"mdi mdi-set-center mdi-24px lifeline-icon\"></span>\n          will remove 2 wrong answers, leaving the correct answer and one wrong\n          answer\n          <img src={fiftyFifty} alt=\"Quiz App Fifty-Fifty example\" />\n        </li>\n        <li>\n          Using a hint by clicking the icon\n          <span className=\"mdi mdi-lightbulb-on mdi-24px lifeline-icon\"></span>\n          will remove one wrong answer leaving two wrong answers and one correct\n          answer. You can use as many hints as possible on a single question.\n          <img src={hints} alt=\"Quiz App hints example\" />\n        </li>\n        <li>\n          Feel free to quit (or retire from) the game at any time. In that case\n          your score will be revealed afterwards.\n        </li>\n        <li>The timer starts as soon as the game loads.</li>\n        <li>Let's do this if you think you've got what it takes?</li>\n      </ul>\n      <div className=\"button\">\n        <span className=\"left\">\n          <Link to=\"/\" style={{ color: \"#fff\" }}>\n            No take me back\n          </Link>\n        </span>\n        <span className=\"right\">\n          <Link to=\"/play/quiz\" style={{ color: \"#fff\" }}>\n            Okay, Let's take test!\n          </Link>\n        </span>\n      </div>\n    </div>\n  </>\n);\n\nexport default QuizInstructions;\n","const isEmpty = (value) => \n    value === undefined ||\n    value == null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;","export default __webpack_public_path__ + \"static/media/correct-answer.e1cf8406.mp3\";","export default __webpack_public_path__ + \"static/media/wrong-answer.e08b616b.mp3\";","export default __webpack_public_path__ + \"static/media/button-sound.8277ab8c.mp3\";","import React, { Component } from \"react\";\nimport M from \"materialize-css\";\nimport classnames from \"classnames\";\nimport \"../../styles/components/play.css\";\n\nimport questions from \"../../questions.json\";\nimport isEmpty from \"../../utils/is-empty\";\n\nimport correctNotification from \"../../assets/audio/correct-answer.mp3\";\nimport wrongNotification from \"../../assets/audio/wrong-answer.mp3\";\nimport buttonSound from \"../../assets/audio/button-sound.mp3\";\n\nclass Play extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions,\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: \"\",\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hints: 5,\n      fiftyFifty: 2,\n      usedFiftyFifty: false,\n      nextButtonDisabled: false,\n      previousButtonDisabled: true,\n      previousRandomNumbers: [],\n      time: {},\n    };\n    this.interval = null;\n    this.correctSound = React.createRef();\n    this.wrongSound = React.createRef();\n    this.buttonSound = React.createRef();\n  }\n\n  componentDidMount() {\n    const { questions, currentQuestion, nextQuestion, previousQuestion } =\n      this.state;\n    this.displayQuestions(\n      questions,\n      currentQuestion,\n      nextQuestion,\n      previousQuestion\n    );\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  displayQuestions = (\n    questions = this.state.questions,\n    currentQuestion,\n    nextQuestion,\n    previousQuestion\n  ) => {\n    let { currentQuestionIndex } = this.state;\n    if (!isEmpty(this.state.questions)) {\n      questions = this.state.questions;\n      currentQuestion = questions[currentQuestionIndex];\n      nextQuestion = questions[currentQuestionIndex + 1];\n      previousQuestion = questions[currentQuestionIndex - 1];\n      const answer = currentQuestion.answer;\n      this.setState(\n        {\n          currentQuestion,\n          nextQuestion,\n          previousQuestion,\n          numberOfQuestions: questions.length,\n          answer,\n          previousRandomNumbers: [],\n        },\n        () => {\n          this.showOptions();\n          this.handleDisableButton();\n        }\n      );\n    }\n  };\n\n  handleOptionClick = (e) => {\n    if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n      this.correctTimeout = setTimeout(() => {\n        this.correctSound.current.play();\n      }, 0);\n      this.correctAnswer();\n    } else {\n      this.wrongTimeout = setTimeout(() => {\n        this.wrongSound.current.play();\n      }, 0);\n      this.wrongAnswer();\n    }\n  };\n\n  handleNextButtonClick = () => {\n    this.playButtonSound();\n    if (this.state.nextQuestion !== undefined) {\n      this.setState(\n        (prevState) => ({\n          currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        }),\n        () => {\n          this.displayQuestions(\n            this.state.state,\n            this.state.currentQuestion,\n            this.state.nextQuestion,\n            this.state.previousQuestion\n          );\n        }\n      );\n    }\n  };\n\n  handlePreviousButtonClick = () => {\n    this.playButtonSound();\n    if (this.state.previousQuestion !== undefined) {\n      this.setState(\n        (prevState) => ({\n          currentQuestionIndex: prevState.currentQuestionIndex - 1,\n        }),\n        () => {\n          this.displayQuestions(\n            this.state.state,\n            this.state.currentQuestion,\n            this.state.nextQuestion,\n            this.state.previousQuestion\n          );\n        }\n      );\n    }\n  };\n\n  handleQuitButtonClick = () => {\n    this.playButtonSound();\n    if (window.confirm(\"Are you sure you want to quit?\")) {\n      this.props.history.push(\"/\");\n    }\n  };\n\n  handleButtonClick = (e) => {\n    switch (e.target.id) {\n      case \"next-button\":\n        this.handleNextButtonClick();\n        break;\n\n      case \"previous-button\":\n        this.handlePreviousButtonClick();\n        break;\n\n      case \"quit-button\":\n        this.handleQuitButtonClick();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  playButtonSound = () => {\n    this.buttonSound.current.play();\n  };\n\n  correctAnswer = () => {\n    M.toast({\n      html: \"Correct Answer!\",\n      classes: \"toast-valid\",\n      displayLength: 1500,\n    });\n    this.setState(\n      (prevState) => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1,\n      }),\n      () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(\n            this.state.questions,\n            this.state.currentQuestion,\n            this.state.nextQuestion,\n            this.state.previousQuestion\n          );\n        }\n      }\n    );\n  };\n\n  wrongAnswer = () => {\n    navigator.vibrate(1000);\n    M.toast({\n      html: \"Wrong Answer!\",\n      classes: \"toast-invalid\",\n      displayLength: 1500,\n    });\n    this.setState(\n      (prevState) => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1,\n      }),\n      () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(\n            this.state.questions,\n            this.state.currentQuestion,\n            this.state.nextQuestion,\n            this.state.previousQuestion\n          );\n        }\n      }\n    );\n  };\n\n  showOptions = () => {\n    const options = Array.from(document.querySelectorAll(\".option\"));\n\n    options.forEach((option) => {\n      option.style.visibility = \"visible\";\n    });\n\n    this.setState({\n      usedFiftyFifty: false,\n    });\n  };\n\n  handleHints = () => {\n    if (this.state.hints > 0) {\n      const options = Array.from(document.querySelectorAll(\".option\"));\n      let indexOfAnswer;\n\n      options.forEach((option, index) => {\n        if (\n          option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()\n        ) {\n          indexOfAnswer = index;\n        }\n      });\n\n      while (true) {\n        const randomNumber = Math.round(Math.random() * 3);\n        if (\n          randomNumber !== indexOfAnswer &&\n          !this.state.previousRandomNumbers.includes(randomNumber)\n        ) {\n          options.forEach((option, index) => {\n            if (index === randomNumber) {\n              option.style.visibility = \"hidden\";\n              this.setState((prevState) => ({\n                hints: prevState.hints - 1,\n                previousRandomNumbers:\n                  prevState.previousRandomNumbers.concat(randomNumber),\n              }));\n            }\n          });\n          break;\n        }\n        if (this.state.previousRandomNumbers.length >= 3) break;\n      }\n    }\n  };\n\n  handleFiftyFifty = () => {\n    if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n      const options = document.querySelectorAll(\".option\");\n      const randomNumbers = [];\n      let indexOfAnswer;\n\n      options.forEach((option, index) => {\n        if (\n          option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()\n        ) {\n          indexOfAnswer = index;\n        }\n      });\n\n      let count = 0;\n      do {\n        const randomNumber = Math.round(Math.random() * 3);\n        if (randomNumber !== indexOfAnswer) {\n          if (\n            randomNumbers.length < 2 &&\n            !randomNumbers.includes(randomNumber) &&\n            !randomNumbers.includes(indexOfAnswer)\n          ) {\n            randomNumbers.push(randomNumber);\n            count++;\n          } else {\n            while (true) {\n              const newRandomNumber = Math.round(Math.random() * 3);\n              if (\n                !randomNumbers.includes(newRandomNumber) &&\n                newRandomNumber !== indexOfAnswer\n              ) {\n                randomNumbers.push(newRandomNumber);\n                count++;\n                break;\n              }\n            }\n          }\n        }\n      } while (count < 2);\n\n      options.forEach((option, index) => {\n        if (randomNumbers.includes(index)) {\n          option.style.visibility = \"hidden\";\n        }\n      });\n      this.setState((prevState) => ({\n        fiftyFifty: prevState.fiftyFifty - 1,\n        usedFiftyFifty: true,\n      }));\n    }\n  };\n\n  startTimer = () => {\n    const countDownTime = Date.now() + 300000;\n    this.interval = setInterval(() => {\n      const now = new Date();\n      const distance = countDownTime - now;\n\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      if (distance < 0) {\n        clearInterval(this.interval);\n        this.setState(\n          {\n            time: {\n              minutes: 0,\n              seconds: 0,\n            },\n          },\n          () => {\n            this.endGame();\n          }\n        );\n      } else {\n        this.setState({\n          time: {\n            minutes,\n            seconds,\n            distance,\n          },\n        });\n      }\n    }, 1000);\n  };\n\n  handleDisableButton = () => {\n    if (\n      this.state.previousQuestion === undefined ||\n      this.state.currentQuestionIndex === 0\n    ) {\n      this.setState({\n        previousButtonDisabled: true,\n      });\n    } else {\n      this.setState({\n        previousButtonDisabled: false,\n      });\n    }\n\n    if (\n      this.state.nextQuestion === undefined ||\n      this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions\n    ) {\n      this.setState({\n        nextButtonDisabled: true,\n      });\n    } else {\n      this.setState({\n        nextButtonDisabled: false,\n      });\n    }\n  };\n\n  endGame = () => {\n    alert(\"Quiz has eneded!\");\n    const { state } = this;\n    const playerStats = {\n      score: state.score,\n      numberOfQuestions: state.numberOfQuestions,\n      numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n      correctAnswers: state.correctAnswers,\n      wrongAnswers: state.wrongAnswers,\n      fiftyFiftyUsed: 2 - state.fiftyFifty,\n      hintsUsed: 5 - state.hints,\n    };\n    setTimeout(() => {\n      this.props.history.push(\"/play/quizSummary\", playerStats);\n    }, 1000);\n  };\n\n  render() {\n    const {\n      currentQuestion,\n      currentQuestionIndex,\n      fiftyFifty,\n      hints,\n      numberOfQuestions,\n      time,\n    } = this.state;\n\n    return (\n      <div>\n        <div>\n          <audio ref={this.correctSound} src={correctNotification}></audio>\n          <audio ref={this.wrongSound} src={wrongNotification}></audio>\n          <audio ref={this.buttonSound} src={buttonSound}></audio>\n        </div>\n        <div className=\"questions\">\n          <h2>Test Mode</h2>\n          <div className=\"lifeline-container\">\n            <p>\n              <span\n                onClick={this.handleFiftyFifty}\n                className=\"mdi mdi-set-center mdi-24px lifeline-icon\"\n              >\n                <span className=\"lifeline\">{fiftyFifty}</span>\n              </span>\n            </p>\n            <p>\n              <span\n                onClick={this.handleHints}\n                className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\"\n              >\n                <span className=\"lifeline\">{hints}</span>\n              </span>\n            </p>\n          </div>\n          <div className=\"timer-container\">\n            <p>\n              <span className=\"left\" style={{ float: \"left\" }}>\n                {currentQuestionIndex + 1} of {numberOfQuestions}\n              </span>\n              <span\n                className={classnames(\"right valid\", {\n                  warning: time.distance <= 120000,\n                  invalid: time.distance < 30000,\n                })}\n              >\n                {time.minutes}:{time.seconds}\n                <span className=\"mdi mdi-clock-outline mdi-24px\"></span>\n              </span>\n            </p>\n          </div>\n          <h5>{currentQuestion.question}</h5>\n          <div className=\"options-container\">\n            <p onClick={this.handleOptionClick} className=\"option\">\n              {currentQuestion.optionA}\n            </p>\n            <p onClick={this.handleOptionClick} className=\"option\">\n              {currentQuestion.optionB}\n            </p>\n          </div>\n          <div className=\"options-container\">\n            <p onClick={this.handleOptionClick} className=\"option\">\n              {currentQuestion.optionC}\n            </p>\n            <p onClick={this.handleOptionClick} className=\"option\">\n              {currentQuestion.optionD}\n            </p>\n          </div>\n\n          <div className=\"button-container\">\n            <button\n              className={classnames(\"\", {\n                disable: this.state.previousButtonDisabled,\n              })}\n              id=\"previous-button\"\n              onClick={this.handleButtonClick}\n            >\n              Previous\n            </button>\n            <button\n              className={classnames(\"\", {\n                disable: this.state.nextButtonDisabled,\n              })}\n              id=\"next-button\"\n              onClick={this.handleButtonClick}\n            >\n              Next\n            </button>\n            <button id=\"quit-button\" onClick={this.handleButtonClick}>\n              Quit\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Play;\n","import React, { Component } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { Link } from \"react-router-dom\";\nimport \"../../styles/components/quiz-summary.css\";\n\nclass QuizSummary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hintsUsed: 0,\n      fiftyFiftyUsed: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { state } = this.props.location;\n    if (state) {\n      this.setState({\n        score: (state.score / state.numberOfQuestions) * 100,\n        numberOfQuestions: state.numberOfQuestions,\n        numberOfAnsweredQuestions: state.numberOfAnsweredQuestions,\n        correctAnswers: state.correctAnswers,\n        wrongAnswers: state.wrongAnswers,\n        hintsUsed: state.hintsUsed,\n        fiftyFiftyUsed: state.fiftyFiftyUsed,\n      });\n    }\n  }\n\n  render() {\n    const { state } = this.props.location;\n    let stats, remark;\n    const userScore = this.state.score;\n\n    if (userScore <= 30) {\n      remark = \"You need more practice!\";\n    } else if (userScore > 30 && userScore <= 50) {\n      remark = \"Better luck next time!\";\n    } else if (userScore <= 70 && userScore > 50) {\n      remark = \"You can do better!\";\n    } else if (userScore >= 71 && userScore <= 84) {\n      remark = \"You did great!\";\n    } else {\n      remark = \"You're an absolute genius!\";\n    }\n\n    if (state !== undefined) {\n      stats = (\n        <>\n          <div style={{ textAlign: \"center\" }}>\n            <span className=\"mdi mdi-check-circle-outline success-icon\"></span>\n          </div>\n          <h1>Test has ended</h1>\n          <div className=\"left\" style={{ marginTop: \"-50px\" }}>\n            <h2 style={{ marginLeft: \"180px\" }}>\n              Score: {this.state.score.toFixed(0)}&#37;\n            </h2>\n            <Chart\n              style={{ marginTop: \"-30px\" }}\n              width={\"600px\"}\n              height={\"500px\"}\n              chartType=\"PieChart\"\n              loader={<div>Loading Chart</div>}\n              data={[\n                [\"No Of Questions\", \"Score\"],\n                [\"\", this.state.correctAnswers],\n                [\"\", this.state.wrongAnswers],\n              ]}\n              options={{\n                // title: \"Test Score\"\n                legend: \"none\",\n                pieStartAngle: 0,\n                // pieSliceText: \"label\",\n                is3D: true,\n                slices: {\n                  0: { color: \"#57b846\", offset: 0.0 },\n                  1: { color: \"red\", offset: 0.0 },\n                },\n              }}\n            />\n          </div>\n          <div className=\"right container stats\">\n            <h4>{remark}</h4>\n            <h2>Your Score: {this.state.score.toFixed(0)}&#37;</h2>\n            <span className=\"stat left\">Total number of questions: </span>\n            <span className=\"right\">{this.state.numberOfQuestions}</span>\n            <br />\n            <span className=\"stat left\">Number of attempted questions: </span>\n            <span className=\"right\">\n              {this.state.numberOfAnsweredQuestions}\n            </span>\n            <br />\n            <span className=\"stat left\">Number of Correct Answers: </span>\n            <span className=\"right\">{this.state.correctAnswers}</span> <br />\n            <span className=\"stat left\">Number of Wrong Answers: </span>\n            <span className=\"right\">{this.state.wrongAnswers}</span>\n            <br />\n            <span className=\"stat left\">Hints Used: </span>\n            <span className=\"right\">{this.state.hintsUsed}</span>\n            <br />\n            <span className=\"stat left\">50-50 Used: </span>\n            <span className=\"right\">{this.state.fiftyFiftyUsed}</span>\n            <section>\n              <ul>\n                <li>\n                  <Link to=\"/play/quiz\">Play Again</Link>\n                </li>\n                <li>\n                  <Link to=\"/\">Back to Home</Link>\n                </li>\n              </ul>\n            </section>\n          </div>\n        </>\n      );\n    } else {\n      stats = (\n        <section>\n          <h1 className=\"no-stats\">No Statistics Available</h1>\n          <ul>\n            <li>\n              <Link to=\"/play/quiz\">Take a Quiz</Link>\n            </li>\n            <li>\n              <Link to=\"/\">Back to Home</Link>\n            </li>\n          </ul>\n        </section>\n      );\n    }\n    return (\n      <>\n        <div className=\"quiz-summary\">{stats}</div>\n      </>\n    );\n  }\n}\n\nexport default QuizSummary;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport QuizInstructions from \"./components/quiz/QuizInstructions\";\nimport Play from \"./components/quiz/Play\";\nimport QuizSummary from \"./components/quiz/QuizSummary\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/play/instructions\" exact component={QuizInstructions} />\n        <Route path=\"/play/quiz\" exact component={Play} />\n        <Route path=\"/play/quizSummary\" exact component={QuizSummary} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"../node_modules/@mdi/font/css/materialdesignicons.min.css\";\nimport \"../node_modules/materialize-css/dist/css/materialize.min.css\";\nimport \"../node_modules/materialize-css/dist/js/materialize.min.js\";\nimport \"./styles/base/base.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}